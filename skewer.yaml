title: Accessing SERVER using Skupper
subtitle: Use public cloud resources to process data from a private SERVER
github_actions_url: https://github.com/skupperproject/REPO/actions/workflows/main.yaml
overview: |
  This example shows how you can use Skupper to access SERVER.
sites:
  public:
    kubeconfig: ~/.kube/config-public
    namespace: public
  private:
    kubeconfig: ~/.kube/config-private
    namespace: private
steps:
  - standard: configure_separate_console_sessions
  - standard: access_your_clusters
  - standard: set_up_your_namespaces
  - standard: install_skupper_in_your_namespaces
  - standard: check_the_status_of_your_namespaces
  - standard: link_your_namespaces
  - title: Deploy SERVER
    preamble: |
      In the private namespace, use the `kubectl apply` command to
      install the server.
    commands:
      private:
        - run: kubectl apply -f server
          output: deployment.apps/server created
  - title: Expose SERVER
    preamble: |
      In the private namespace, use `skupper expose` to expose SERVER
      on the Skupper network.

      Then, in the public namespace, use `kubectl get service/server`
      to check that the service appears after a moment.
    commands:
      private:
        - await: deployment/server
        - run: skupper expose deployment/server --port 8080 --target-port 80
          output: deployment server exposed as server
      public:
        - await: service/server
        - run: kubectl get service/server
          output: |
            NAME     TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE
            server   ClusterIP   10.100.58.95   <none>        5672/TCP   2s
  - title: Run CLIENT
    preamble: |
      In the public namespace, use `kubectl run` to run CLIENT.
    commands:
      public:
        - await: service/server
        - run: kubectl run client --attach --rm --image=docker.io/curlimages/curl --restart=Never -- -sf http://server:8080/
          output: |
            OUTPUT
            pod "client" deleted
  - standard: accessing_the_web_console
  - standard: cleaning_up
    commands:
      private:
        - run: kubectl delete -f server
        - run: skupper delete
      public:
        - run: skupper delete
